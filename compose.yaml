services:
  fsm:
    build:
      context: ./fsm
      target: final
    env_file:
      - ../fsm/.env
    depends_on:
      mongo:
        condition: service_started
      rabbit:
        condition: service_healthy

  file-storage:
    build:
      context: ./file-storage
      target: final
    env_file:
      - ../file-storage/.env
    depends_on:
      rabbit:
        condition: service_healthy
    volumes:
      - "$REAL_STORAGE_PATH:$STORAGE_PATH"

  auth:
    build:
      context: ./auth
      target: final
    env_file:
      - ../auth/.env

  mongo:
    image: mongo
    restart: always
    env_file:
      - ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "$MONGO_USER"
      MONGO_INITDB_ROOT_PASSWORD: "$MONGO_PASS"
      MONGO_INITDB_DATABASE: "$MONGO_DB"

  rabbit:
    image: rabbitmq:management-alpine
    hostname: rabbit
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: "$RABBIT_USER"
      RABBITMQ_DEFAULT_PASS: "$RABBIT_PASS"
      RABBITMQ_DEFAULT_VHOST: "$RABBIT_VHOST"
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 3s
      timeout: 10s
      retries: 10

  caddy:
    image: caddy
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - "$CADDY_CONFIG:/etc/caddy"
      - "$CADDY_DATA:/data"
      - "$CADDY_CONFIG:/config"

volumes:
  caddy_data:
  caddy_config: